The C64 uses a somewhat complicated memory banking scheme; the normal power-on default is to have the BASIC ROM mapped in at $A000 and the screen editor/kernal ROM at $E000. Memory underneath the system ROMs can be written to, but not read back without swapping out the ROMs. $1 contains a register with control bits for enabling/disabling the system ROMS as well as the I/O area at $D000. Most software swaps out the BASIC ROM, less often the kernal as the user must then provide his own code for I/O and interrupt handling. The $D000 page contains the I/O registers at power on, it can either be swapped with the character ROM (normally invisible to the CPU) or else simply the bare RAM underneath. If the I/O registers are swapped out, it is also necessary to disable interrupts via a SEI instruction. Theoretically, if all ROMs and the I/O area are swapped out, the entire 64k of system RAM is accessible to software aside from $0/$1 and the color RAM at $D800. If the kernel ROM is swapped out, BASIC will be removed with it and it is not possible to have BASIC active without the kernel.
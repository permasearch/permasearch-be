In computer programming, programming languages are often colloquially classified as to whether the language's type system makes it strongly typed or weakly typed (loosely typed). These terms do not have a precise definition, but in general, a strongly typed language has stricter typing rules and is more likely to generate an error or refuse to compile if the argument passed to a function does not closely match the expected type. On the other hand, a weakly typed language has looser typing rules and may produce unpredictable results or may perform implicit type conversion.[1] A different but related concept is latent typing.
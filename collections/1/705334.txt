An Internet of Things (IoT) Gateway provides the means to bridge the gap between devices in the field (factory floor, home, etc.), the Cloud, where data is collected, stored and manipulated by enterprise applications, and the user equipment (smart phones, tablets etc.). The IoT Gateway,[6][7] provides a communication link between the field and the Cloud and can also offer local processing and storage capabilities to provide offline services and if required real time control over the devices in the field. To achieve sustainable interoperability in the Internet of Things ecosystem today[8][9] there are two dominant architectures for data exchange protocols: bus-based (DDS, REST, XMPP) and broker based (AMPQ, CoAP, MQTT, JMI). The protocols that support the information exchange between interoperability domains can also be classified[10][11] to message-centric (AMQP, MQTT, JMS, REST) and data-centric (DDS, CoAP, XMPP). To use the full potential of IoT the interconnected devices communicate using lightweight protocols that donâ€™t require extensive CPU resources. C, Java, Python and some scripting languages are the preferable choices used by IoT applications. To handle any needed protocol conversion, database storage or decision making (e.g. collision handling), IoT nodes use separate IoT gateways in order to supplement the low-intelligence within the IoT node.
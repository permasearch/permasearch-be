To reduce the computation time, engineers devised faster ways to add two binary numbers by using carry-lookahead adders (CLA). They work by creating two signals (P and G) for each bit position, based on whether a carry is propagated through from a less significant bit position (at least one input is a 1), generated in that bit position (both inputs are 1), or killed in that bit position (both inputs are 0).  In most cases, P is simply the sum output of a half adder and G is the carry output of the same adder.  After P and G are generated, the carries for every bit position are created.  Some advanced carry-lookahead architectures are the Manchester carry chain, Brent–Kung adder (BKA),[5] and the Kogge–Stone adder (KSA).[6][7]
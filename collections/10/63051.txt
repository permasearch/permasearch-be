Nginx was written with an explicit goal of outperforming the Apache web server.[29] Out of the box, serving static files, Nginx uses dramatically less memory than Apache, and can handle roughly four times more requests per second.[30] This performance boost comes at a cost of decreased flexibility, such as the ability to override systemwide access settings on a per-file basis (Apache accomplishes this with an .htaccess file, while Nginx has no such feature built in).[31] Formerly, adding third party modules to nginx required recompiling the application from source with the modules statically linked. This was partially overcome in version 1.9.11 with the addition of dynamic module loading. However, the modules still must be compiled at the same time as nginx, and not all modules are compatible with this systemâ€”some require the older static linking process.[32]